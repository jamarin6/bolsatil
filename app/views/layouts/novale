<script type="text/javascript">
	$(function () {

    Highcharts.setOptions({
        global : {
            useUTC : false
        }
    });

    // Create the chart
    $('#graphic_box').highcharts('StockChart', {
        chart : {
        	height: 200,
      		width: 300,
            events : {
                load : function () {

                    // set up the updating of the chart each second
                    var series = this.series[0];
                    setInterval(function () {
                       $.get("<%= welcome_index_url(:format => :js) %>", function(data){
                            //quiero los datos 'updated' y 'high' en 'x' y en 'y'
                           $('#values_box').html(values);
                           $('#updatedValue').html(updated_var);
                           $('#buyValue').html(buy_var);

                           eval(data);
                           //alert(typeof x);
                      		series.addPoint([x, buy_var], true, true);
                          });
                    }, 1000);
                }
            }
        },

        yAxis: {
            title: {
                text: 'Buy ($)'
            },
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }]
        },

        rangeSelector: {
          enabled: false
        },

        title : {
            text : 'Bitcoin price index (24h)'
        },

        exporting: {
            enabled: false
        },

        series : [{
            name : 'Random data',
            data : (function () {
                // generate an array of random data
                var data = [], time = (new Date()).getTime(), i;

                for (i = -999; i <= 0; i += 1) {
                    data.push([
                        time + i * 1000,
                        Math.round(Math.random() * 100)
                    ]);
                }
                return data;
            }())
        }]
    });

});
</script>


+++++++++++++++++++++++++++++++++++++++++++ el header antes d la nueva barra +++++++++++++++++++++++++++++

<br>
<div class="container">
  <div class="row">
    <div class="col-xs-12 col-sm-6 col-md-3 col-lg-6">
      <ul class="nav nav-tabs">
        <li role="presentation" class="active"><a href="#">Logo</a></li>
        <li role="presentation"><a href="#">Link 1</a></li>
        <li role="presentation"><a href="#">Link 2</a></li>
      </ul>
    </div>
  
    <div class="col-xs-12 col-sm-6 col-md-9 col-lg-6">
      <div class="row">
        <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8">
          <div id="graphic_box"></div><!-- aquí va la gráfica -->
        </div>

        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
          <div class="row"> <!--row para dolares-->
            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
              <h1 class="text-center gris">$</h1>
            </div>
            <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11"> <!-- aqui el 11 antes era 3 -->
              <h1><div id="buy_value" class="text-center gris"></div></h1><!-- aquí va el valor 'buy' -->
            </div><br>
          </div> 
           
          <div class="row"> <!--row para euros-->
            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
              <h1 class="text-center gris">€</h1>
            </div>
            <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11">
              <h1><div id="buy_euro_value" class="text-center gris"></div></h1><!-- aquí va el valor 'buy' -->
            </div><br>
          </div>            
          
        </div>
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">
  $(function () {

    Highcharts.setOptions({
        global : {
            useUTC : false
        }
    });

    // Create the chart
    $('#graphic_box').highcharts('StockChart', {
        chart : {
          height: 180,
          width: 280,
            events : {
                load : function () {

                    // set up the updating of the chart each second
                    var series = this.series[0];
                    setInterval(function () {
                       $.get("<%= welcome_index_url(:format => :js) %>", function(data){
                            //quiero los datos 'updated' y 'high' en 'x' y en 'y'
                            var buy_euros = buy_var*0.878397*1.005; //obtengo el valor 'buy' pasado ya a euros y con incremento del 0,5%
                            var buy_euros_truncate = buy_euros.toFixed(2); //el valor 'buy' en euros con incremento del 0,5% y truncado
                            var buy_dollars = buy_var*1.005; //el valor en dolares de 'buy' con incremento del 0,5%
                            var buy_dollars_truncate = buy_dollars.toFixed(2); //'buy' en dolares ya con el incremento y truncado
                           $('#values_box').html(values); //los valores en forma de hash
                           $('#updatedValue').html(updated_var);
                           $('#buy_value').html(buy_dollars_truncate); //el valor 'buy' en dolares con un 5% añadido y truncado
                           $('#buy_euro_value').html(buy_euros_truncate); //aqui buscar api para descargar la equivalencia a € actualizada
                           $('#buyValue2').html(buy_var);

                           eval(data);
                           //alert(typeof x);
                          series.addPoint([x, buy_var], true, true);
                          });
                    }, 1000);
                }
            }
        },

        yAxis: {
            title: {
                text: 'Buy ($)'
            },
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }]
        },

        rangeSelector: {
          enabled: false
        },

        title : {
            text : 'Bitcoin price index (24h)'
        },

        exporting: {
            enabled: false
        },

        series : [{
            name : 'Random data',
            data : (function () {
                // generate an array of random data
                var data = [], time = (new Date()).getTime(), i;

                for (i = -999; i <= 0; i += 1) {
                    data.push([
                        time + i * 1000,
                        Math.round(Math.random() * 100)
                    ]);
                }
                return data;
            }())
        }]
    });

});
</script>


+++++++++++++++++++++++++++++++++++++++++++++ fin header antes d nuevo header +++++++++++++++++++

++++++++++++antiguo welcome con info d entrada ++++++
<h1>Esto es el Welcome!!!</h1>

<h3>Parseado: <br>
  <div id="values_box">
    <%= @parseJson %><br><br> <!-- pinto todos los valores tipo hash -->
  </div>
</h3>

<h3>Pintar el valor 'updated' del json parseado:
  <div id="updatedValue"><%= @parseJson["btc_usd"]["updated"] %></div> <!-- elijo un valor aislado sacandolo del hash -->
</h3>

<h3>Pintar el valor <strong>'buy'</strong> que es que se actualiza en la <strong>gráfica</strong>:
  <div id="buyValue2"><%= @parseJson["btc_usd"]["buy"] %></div> <!-- elijo un valor aislado sacandolo del hash -->
</h3>
+++++++++++fin antiguo welcome +++++++++++++++++++++

+++++++++++++++++++++++++++++++++++++grafica 1ª q funcionaba bien ++++++++++++++++++++++++++++

<script type="text/javascript">
$(function () {
  $(document).ready(function () {

  Highcharts.theme = {
     colors: ["#41ccb4"],
     chart: {
      backgroundColor: '#1d2028'
     },
     tooltip: {
        borderWidth: 0,
        backgroundColor: 'rgba(219,219,216,0.8)',
        shadow: false
     },

     // General
     background2: '#F0F0EA'
     
  };

    Highcharts.setOptions(Highcharts.theme);

    $('#btc_chart').highcharts({
      chart: {
        type: 'spline',
        animation: Highcharts.svg, // don't animate in old IE
        marginRight: 10,
        events: {
            load: function () {

              // set up the updating of the chart each second
             var series = this.series[0];
              setInterval(function () {
                 $.get("<%= welcome_index_url(:format => :js) %>", function(data){
                      //quiero los datos 'updated' y 'high' en 'x' y en 'y'
                      var buy_euros = buy_var*0.878397*1.005; //obtengo el valor 'buy' pasado ya a euros y con incremento del 0,5%
                      var buy_euros_truncate = buy_euros.toFixed(2); //el valor 'buy' en euros con incremento del 0,5% y truncado
                      var buy_dollars = buy_var*1.005; //el valor en dolares de 'buy' con incremento del 0,5%
                      var buy_dollars_truncate = buy_dollars.toFixed(2); //'buy' en dolares ya con el incremento y truncado
                     $('#values_box').html(values); //los valores en forma de hash
                     $('#updatedValue').html(updated_var);
                     $('#usd_value').html(buy_dollars_truncate); //el valor 'buy' en dolares con un 5% añadido y truncado
                     $('#eur_value').html(buy_euros_truncate); //aqui buscar api para descargar la equivalencia a € actualizada
                     $('#buyValue2').html(buy_var);

                     eval(data);
                     //alert(typeof x);
                    series.addPoint([x, buy_var], true, true);
                    });
              }, 1000);
            }
        }
      },
      title: {
        text: false
      },
      xAxis: {
        type: 'datetime',
        tickPixelInterval: 150
      },
      yAxis: {
        title: {
          text: false
        },
        plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
        }]
      },
      tooltip: {
        formatter: function () {
            return '<b>' + this.series.name + '</b><br/>' +
                Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                Highcharts.numberFormat(this.y, 2);
        }
      },
      legend: {
        enabled: false
      },
      exporting: {
        enabled: false
      },
      series: [{
        name: 'Random data',
        data: (function () {
            // generate an array of random data
            var data = [],
                time = (new Date()).getTime(),
                i;

            for (i = -10; i <= 0; i += 1) {
                data.push({
                    x: time + i * 1000,
                    y: Math.random(5)
                });
            }
            return data;
        }())
      }]
    });
  });
});
</script>

++++++++++++++++++++++++++++++++++ fin grafica 1ª q funcionaba bien ++++++++++++++++++++++++++